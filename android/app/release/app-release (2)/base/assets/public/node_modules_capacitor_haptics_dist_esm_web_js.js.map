{"version":3,"file":"node_modules_capacitor_haptics_dist_esm_web_js.js","mappings":";;;;;;;;;;;;;;;;;AAA4C;AACkB;AACvD,MAAMG,UAAU,SAASH,sDAAS,CAAC;EACtCI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,gBAAgB,GAAG,KAAK;EACjC;EACMC,MAAMA,CAACC,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAC,8IAAA;MAClB,MAAMC,OAAO,GAAGF,KAAI,CAACG,gBAAgB,CAACJ,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACK,KAAK,CAAC;MACtGJ,KAAI,CAACK,kBAAkB,CAACH,OAAO,CAAC;IAAC;EACrC;EACMI,YAAYA,CAACP,OAAO,EAAE;IAAA,IAAAQ,MAAA;IAAA,OAAAN,8IAAA;MACxB,MAAMC,OAAO,GAAGK,MAAI,CAACC,sBAAsB,CAACT,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACU,IAAI,CAAC;MAC3GF,MAAI,CAACF,kBAAkB,CAACH,OAAO,CAAC;IAAC;EACrC;EACMQ,OAAOA,CAACX,OAAO,EAAE;IAAA,IAAAY,MAAA;IAAA,OAAAV,8IAAA;MACnB,MAAMW,QAAQ,GAAG,CAACb,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACa,QAAQ,KAAK,GAAG;MAC5FD,MAAI,CAACN,kBAAkB,CAAC,CAACO,QAAQ,CAAC,CAAC;IAAC;EACxC;EACMC,cAAcA,CAAA,EAAG;IAAA,IAAAC,MAAA;IAAA,OAAAb,8IAAA;MACnBa,MAAI,CAACjB,gBAAgB,GAAG,IAAI;IAAC;EACjC;EACMkB,gBAAgBA,CAAA,EAAG;IAAA,IAAAC,MAAA;IAAA,OAAAf,8IAAA;MACrB,IAAIe,MAAI,CAACnB,gBAAgB,EAAE;QACvBmB,MAAI,CAACX,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;MACjC;IAAC;EACL;EACMY,YAAYA,CAAA,EAAG;IAAA,IAAAC,MAAA;IAAA,OAAAjB,8IAAA;MACjBiB,MAAI,CAACrB,gBAAgB,GAAG,KAAK;IAAC;EAClC;EACAM,gBAAgBA,CAACC,KAAK,GAAGZ,qDAAW,CAAC2B,KAAK,EAAE;IACxC,IAAIf,KAAK,KAAKZ,qDAAW,CAAC4B,MAAM,EAAE;MAC9B,OAAO,CAAC,EAAE,CAAC;IACf,CAAC,MACI,IAAIhB,KAAK,KAAKZ,qDAAW,CAAC6B,KAAK,EAAE;MAClC,OAAO,CAAC,EAAE,CAAC;IACf;IACA,OAAO,CAAC,EAAE,CAAC;EACf;EACAb,sBAAsBA,CAACC,IAAI,GAAGhB,0DAAgB,CAAC6B,OAAO,EAAE;IACpD,IAAIb,IAAI,KAAKhB,0DAAgB,CAAC8B,OAAO,EAAE;MACnC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC/B,CAAC,MACI,IAAId,IAAI,KAAKhB,0DAAgB,CAAC+B,KAAK,EAAE;MACtC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB;IACA,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACvB;EACAnB,kBAAkBA,CAACH,OAAO,EAAE;IACxB,IAAIuB,SAAS,CAACf,OAAO,EAAE;MACnBe,SAAS,CAACf,OAAO,CAACR,OAAO,CAAC;IAC9B,CAAC,MACI;MACD,MAAM,IAAI,CAACwB,WAAW,CAAC,0CAA0C,CAAC;IACtE;EACJ;AACJ","sources":["./node_modules/@capacitor/haptics/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { ImpactStyle, NotificationType } from './definitions';\nexport class HapticsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.selectionStarted = false;\n    }\n    async impact(options) {\n        const pattern = this.patternForImpact(options === null || options === void 0 ? void 0 : options.style);\n        this.vibrateWithPattern(pattern);\n    }\n    async notification(options) {\n        const pattern = this.patternForNotification(options === null || options === void 0 ? void 0 : options.type);\n        this.vibrateWithPattern(pattern);\n    }\n    async vibrate(options) {\n        const duration = (options === null || options === void 0 ? void 0 : options.duration) || 300;\n        this.vibrateWithPattern([duration]);\n    }\n    async selectionStart() {\n        this.selectionStarted = true;\n    }\n    async selectionChanged() {\n        if (this.selectionStarted) {\n            this.vibrateWithPattern([70]);\n        }\n    }\n    async selectionEnd() {\n        this.selectionStarted = false;\n    }\n    patternForImpact(style = ImpactStyle.Heavy) {\n        if (style === ImpactStyle.Medium) {\n            return [43];\n        }\n        else if (style === ImpactStyle.Light) {\n            return [20];\n        }\n        return [61];\n    }\n    patternForNotification(type = NotificationType.Success) {\n        if (type === NotificationType.Warning) {\n            return [30, 40, 30, 50, 60];\n        }\n        else if (type === NotificationType.Error) {\n            return [27, 45, 50];\n        }\n        return [35, 65, 21];\n    }\n    vibrateWithPattern(pattern) {\n        if (navigator.vibrate) {\n            navigator.vibrate(pattern);\n        }\n        else {\n            throw this.unavailable('Browser does not support the vibrate API');\n        }\n    }\n}\n"],"names":["WebPlugin","ImpactStyle","NotificationType","HapticsWeb","constructor","arguments","selectionStarted","impact","options","_this","_asyncToGenerator","pattern","patternForImpact","style","vibrateWithPattern","notification","_this2","patternForNotification","type","vibrate","_this3","duration","selectionStart","_this4","selectionChanged","_this5","selectionEnd","_this6","Heavy","Medium","Light","Success","Warning","Error","navigator","unavailable"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}