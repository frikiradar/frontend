{"version":3,"file":"node_modules_capacitor-firebase_analytics_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/@capacitor-firebase/analytics/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { getAnalytics, logEvent, setAnalyticsCollectionEnabled, setConsent, setUserId, setUserProperties, } from 'firebase/analytics';\nimport { ConsentStatus, ConsentType } from './definitions';\nexport class FirebaseAnalyticsWeb extends WebPlugin {\n    async getAppInstanceId() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async setConsent(options) {\n        const status = options.status === ConsentStatus.Granted ? 'granted' : 'denied';\n        const consentSettings = {};\n        switch (options.type) {\n            case ConsentType.AdPersonalization:\n                consentSettings.personalization_storage = status;\n                break;\n            case ConsentType.AdStorage:\n                consentSettings.ad_storage = status;\n                break;\n            case ConsentType.AdUserData:\n                consentSettings.ad_user_data = status;\n                break;\n            case ConsentType.AnalyticsStorage:\n                consentSettings.analytics_storage = status;\n                break;\n            case ConsentType.FunctionalityStorage:\n                consentSettings.functionality_storage = status;\n                break;\n            case ConsentType.PersonalizationStorage:\n                consentSettings.personalization_storage = status;\n                break;\n        }\n        setConsent(consentSettings);\n    }\n    async setUserId(options) {\n        const analytics = getAnalytics();\n        setUserId(analytics, options.userId || '');\n    }\n    async setUserProperty(options) {\n        const analytics = getAnalytics();\n        setUserProperties(analytics, {\n            [options.key]: options.value,\n        });\n    }\n    async setCurrentScreen(options) {\n        const analytics = getAnalytics();\n        logEvent(analytics, 'screen_view', {\n            firebase_screen: options.screenName || undefined,\n            firebase_screen_class: options.screenClassOverride || undefined,\n        });\n    }\n    async logEvent(options) {\n        const analytics = getAnalytics();\n        logEvent(analytics, options.name, options.params);\n    }\n    async setSessionTimeoutDuration(_options) {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async setEnabled(_options) {\n        const analytics = getAnalytics();\n        setAnalyticsCollectionEnabled(analytics, _options.enabled);\n    }\n    async isEnabled() {\n        const enabled = window['ga-disable-analyticsId'] === true;\n        return {\n            enabled,\n        };\n    }\n    async resetAnalyticsData() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\n"],"names":["WebPlugin","getAnalytics","logEvent","setAnalyticsCollectionEnabled","setConsent","setUserId","setUserProperties","ConsentStatus","ConsentType","FirebaseAnalyticsWeb","getAppInstanceId","_this","_asyncToGenerator","unimplemented","options","status","Granted","consentSettings","type","AdPersonalization","personalization_storage","AdStorage","ad_storage","AdUserData","ad_user_data","AnalyticsStorage","analytics_storage","FunctionalityStorage","functionality_storage","PersonalizationStorage","analytics","userId","setUserProperty","key","value","setCurrentScreen","firebase_screen","screenName","undefined","firebase_screen_class","screenClassOverride","name","params","setSessionTimeoutDuration","_options","_this2","setEnabled","enabled","isEnabled","window","resetAnalyticsData","_this3"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}