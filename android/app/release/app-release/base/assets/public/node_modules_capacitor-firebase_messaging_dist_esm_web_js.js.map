{"version":3,"file":"node_modules_capacitor-firebase_messaging_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/@capacitor-firebase/messaging/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { deleteToken, getMessaging, getToken, isSupported as isSupportedInWeb, onMessage, } from 'firebase/messaging';\nexport class FirebaseMessagingWeb extends WebPlugin {\n    constructor() {\n        super();\n        isSupportedInWeb().then(supported => {\n            if (!supported) {\n                return;\n            }\n            const messaging = getMessaging();\n            onMessage(messaging, payload => this.handleNotificationReceived(payload));\n        });\n    }\n    async checkPermissions() {\n        const receive = this.convertNotificationPermissionToPermissionState(Notification.permission);\n        return {\n            receive,\n        };\n    }\n    async requestPermissions() {\n        const notificationPermission = await Notification.requestPermission();\n        const receive = this.convertNotificationPermissionToPermissionState(notificationPermission);\n        return {\n            receive,\n        };\n    }\n    async isSupported() {\n        const isSupported = await isSupportedInWeb();\n        return {\n            isSupported,\n        };\n    }\n    async getToken(options) {\n        const messaging = getMessaging();\n        const token = await getToken(messaging, {\n            vapidKey: options.vapidKey,\n            serviceWorkerRegistration: options.serviceWorkerRegistration,\n        });\n        return {\n            token,\n        };\n    }\n    async deleteToken() {\n        const messaging = getMessaging();\n        await deleteToken(messaging);\n    }\n    async getDeliveredNotifications() {\n        this.throwUnavailableError();\n    }\n    async removeDeliveredNotifications(_options) {\n        this.throwUnavailableError();\n    }\n    async removeAllDeliveredNotifications() {\n        this.throwUnavailableError();\n    }\n    async subscribeToTopic(_options) {\n        this.throwUnavailableError();\n    }\n    async unsubscribeFromTopic(_options) {\n        this.throwUnavailableError();\n    }\n    async createChannel(_options) {\n        this.throwUnavailableError();\n    }\n    async deleteChannel(_options) {\n        this.throwUnavailableError();\n    }\n    async listChannels() {\n        this.throwUnavailableError();\n    }\n    handleNotificationReceived(messagePayload) {\n        const notification = this.createNotificationResult(messagePayload);\n        const event = {\n            notification,\n        };\n        this.notifyListeners(FirebaseMessagingWeb.notificationReceivedEvent, event);\n    }\n    createNotificationResult(messagePayload) {\n        var _a, _b, _c;\n        const notification = {\n            body: (_a = messagePayload.notification) === null || _a === void 0 ? void 0 : _a.body,\n            data: messagePayload.data,\n            id: messagePayload.messageId,\n            image: (_b = messagePayload.notification) === null || _b === void 0 ? void 0 : _b.image,\n            title: (_c = messagePayload.notification) === null || _c === void 0 ? void 0 : _c.title,\n        };\n        return notification;\n    }\n    convertNotificationPermissionToPermissionState(permission) {\n        let state = 'prompt';\n        switch (permission) {\n            case 'granted':\n                state = 'granted';\n                break;\n            case 'denied':\n                state = 'denied';\n                break;\n        }\n        return state;\n    }\n    throwUnavailableError() {\n        throw this.unavailable('Not available on web.');\n    }\n}\nFirebaseMessagingWeb.notificationReceivedEvent = 'notificationReceived';\n"],"names":["WebPlugin","deleteToken","getMessaging","getToken","isSupported","isSupportedInWeb","onMessage","FirebaseMessagingWeb","constructor","then","supported","messaging","payload","handleNotificationReceived","checkPermissions","_this","_asyncToGenerator","receive","convertNotificationPermissionToPermissionState","Notification","permission","requestPermissions","_this2","notificationPermission","requestPermission","options","token","vapidKey","serviceWorkerRegistration","getDeliveredNotifications","_this3","throwUnavailableError","removeDeliveredNotifications","_options","_this4","removeAllDeliveredNotifications","_this5","subscribeToTopic","_this6","unsubscribeFromTopic","_this7","createChannel","_this8","deleteChannel","_this9","listChannels","_this10","messagePayload","notification","createNotificationResult","event","notifyListeners","notificationReceivedEvent","_a","_b","_c","body","data","id","messageId","image","title","state","unavailable"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}