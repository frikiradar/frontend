{"version":3,"file":"src_app_chat_chat_module_ts.js","mappings":"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","sources":["./src/app/chat/chat.module.ts","./src/app/chat/chat.page.ts"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { SharedModule } from \"./../shared/shared.module\";\nimport { ChatPage } from \"./chat.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { EventEmitter } from \"@angular/core\";\nimport { Platform } from \"@ionic/angular\";\nimport { FirebaseX } from \"@ionic-native/firebase-x/ngx\";\nimport { AngularFireMessaging } from \"@angular/fire/compat/messaging\";\nimport { LocalNotifications } from \"@ionic-native/local-notifications/ngx\";\n\nimport { User } from \"../models/user\";\nimport { Chat } from \"./../models/chat\";\nimport { AuthService } from \"./../services/auth.service\";\nimport { NavService } from \"../services/navigation.service\";\n\n@Component({\n  selector: \"app-chat\",\n  templateUrl: \"./chat.page.html\",\n  styleUrls: [\"./chat.page.scss\"],\n})\nexport class ChatPage implements OnInit {\n  userId: User[\"id\"];\n  chats: Chat[];\n  public desktop = false;\n  public messageEvent: EventEmitter<Chat> = new EventEmitter();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    public auth: AuthService,\n    private afMessaging: AngularFireMessaging,\n    private firebase: FirebaseX,\n    private platform: Platform,\n    private localNotifications: LocalNotifications,\n    private nav: NavService\n  ) {}\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.get(\"id\")) {\n      this.userId = +this.route.snapshot.paramMap.get(\"id\");\n    }\n\n    if (window.innerWidth > 991) {\n      this.desktop = true;\n    }\n    window.onresize = async () => {\n      this.desktop = window.innerWidth > 991;\n    };\n    this.firebaseListener();\n  }\n\n  async showChat(id: User[\"id\"]) {\n    this.nav.navigateRoot(\"/chat/\" + id);\n  }\n\n  async backToList() {\n    this.nav.navigateRoot(\"/chat\");\n  }\n\n  async firebaseListener() {\n    if (this.platform.is(\"cordova\")) {\n      this.firebase.onMessageReceived().subscribe(\n        (notification) => {\n          if (notification?.message && notification?.topic === \"chat\") {\n            const message = JSON.parse(notification.message) as Chat;\n            // console.log(message);\n            this.messageEvent.emit(message);\n\n            if (\n              this.router.url.includes(\"chat\") &&\n              message?.fromuser?.id !== this.userId &&\n              notification?.notify === \"true\"\n            ) {\n              this.localNotifications.schedule({\n                title: notification?.title,\n                text: notification?.body,\n                sound: \"file://assets/audio/bipbip.mp3\",\n                smallIcon: \"res://notification_icon\",\n                color: \"#e91e63\",\n                icon: notification?.icon,\n                // attachments: notification?.attachments,\n                channel: notification?.topic,\n                data: notification,\n                // actions\n              });\n            }\n          }\n        },\n        (error) => {\n          console.error(\"Error in notification\", error);\n        }\n      );\n    } else {\n      this.afMessaging.messages.subscribe((payload: any) => {\n        // console.log(payload);\n        if (payload?.data?.message && payload?.data?.topic === \"chat\") {\n          const message = JSON.parse(payload.data.message) as Chat;\n          // console.log(payload.data);\n          this.messageEvent.emit(message);\n        }\n      });\n    }\n  }\n\n  messageChange(message: Chat) {\n    this.messageEvent.emit(message);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}